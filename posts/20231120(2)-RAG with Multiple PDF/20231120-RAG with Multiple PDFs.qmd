---
title: "Retrieval Augmented Generation with Multiple PDF"
description: "An applied example using llama hub"
author: "Luke Heley"
date: "19 Nov 23"
freeze: true
execute:
  eval: true
format:
  html:
    toc: true
    code-fold: show
categories:
 - large language models (LLM)
 - evidence synthesis
 - methods
 - notes
editor_options:
  chunk_output_type: console
---

# Build the Knowledge Base

```{python}

from llama_hub.smart_pdf_loader import SmartPDFLoader
llmsherpa_api_url = "https://readers.llmsherpa.com/api/document/developer/parseDocument?renderFormat=all"

pdf_url = "https://www.nao.org.uk/wp-content/uploads/2015/10/Major-Projects-Report-2015-and-the-Equipment-Plan-2015-2025.pdf" # also allowed is a file path e.g. /home/downloads/xyz.pdf

url2 = "https://www.nao.org.uk/wp-content/uploads/2010/10/1011489_I.pdf"
urls = [url2, pdf_url]

pdf_loader = SmartPDFLoader(llmsherpa_api_url=llmsherpa_api_url)

documents = []
for url in urls:
        documents.extend(pdf_loader.load_data(url))

documents[0:2] # look at first 3 chunks 

```

# Embed and Store the Vector Database

```{python}
from llama_index import VectorStoreIndex
index = VectorStoreIndex.from_documents(documents)
index
```

# Query the Documents

```{python}
query_engine = index.as_query_engine()
response = query_engine.query("List the Major Project Reports available in this context.")
print(response)

```
