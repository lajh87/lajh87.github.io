{
  "hash": "11dfa94c374e09b681a477620c7ac598",
  "result": {
    "markdown": "---\ntitle: \"Synthetic Control Methods\"\ndescription: \"Notes on Synthetic Control\"\nauthor: \"Luke Heley\"\ndate: \"29 Aug 2023\"\nfreeze: true\nexecute:\n  eval: true\nformat:\n  html:\n    toc: true\n    code-fold: true\ncategories:\n - evaluation\n - synthetic-control\n - methods\n - notes\neditor_options:\n  chunk_output_type: console\nbibliography: references.bib\n---\n\n\n# What is it\n\nUse of historical data to construct a ‘synthetic clone’ of a group receiving a particular intervention. Differences between the performance of the actual group and its synthetic clone may be used as evidence that the intervention has had an effect. Most commonly applied to interventions applied at an area level [@mb2020]. \n\n# Examples \n\nThe method aims to generate a synthetic California using information from a subset of control states (the “donor pool”) where a similar law was not implemented. The donor pool is the subset of case comparisons from which information is borrowed to generate a synthetic version of the treated unit (“California”).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(tidysynth)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidysynth\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidysynth' was built under R version 4.3.1\n```\n:::\n\n```{.r .cell-code}\ndata(\"smoking\")\nsmoking %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,209\nColumns: 7\n$ state     <chr> \"Rhode Island\", \"Tennessee\", \"Indiana\", \"Nevada\", \"Louisiana…\n$ year      <dbl> 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, …\n$ cigsale   <dbl> 123.9, 99.8, 134.6, 189.5, 115.9, 108.4, 265.7, 93.8, 100.3,…\n$ lnincome  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ beer      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ age15to24 <dbl> 0.1831579, 0.1780438, 0.1765159, 0.1615542, 0.1851852, 0.175…\n$ retprice  <dbl> 39.3, 39.9, 30.6, 38.9, 34.3, 38.4, 31.4, 37.3, 36.7, 28.8, …\n```\n:::\n\n```{.r .cell-code}\nsmoking_out <-\n  \n  smoking %>%\n  \n  # initial the synthetic control object\n  synthetic_control(outcome = cigsale, # outcome\n                    unit = state, # unit index in the panel data\n                    time = year, # time index in the panel data\n                    i_unit = \"California\", # unit where the intervention occurred\n                    i_time = 1988, # time period when the intervention occurred\n                    generate_placebos=T # generate placebo synthetic controls (for inference)\n                    ) %>%\n  \n  # Generate the aggregate predictors used to fit the weights\n  \n  # average log income, retail price of cigarettes, and proportion of the\n  # population between 15 and 24 years of age from 1980 - 1988\n  generate_predictor(time_window = 1980:1988,\n                     ln_income = mean(lnincome, na.rm = T),\n                     ret_price = mean(retprice, na.rm = T),\n                     youth = mean(age15to24, na.rm = T)) %>%\n  \n  # average beer consumption in the donor pool from 1984 - 1988\n  generate_predictor(time_window = 1984:1988,\n                     beer_sales = mean(beer, na.rm = T)) %>%\n  \n  # Lagged cigarette sales \n  generate_predictor(time_window = 1975,\n                     cigsale_1975 = cigsale) %>%\n  generate_predictor(time_window = 1980,\n                     cigsale_1980 = cigsale) %>%\n  generate_predictor(time_window = 1988,\n                     cigsale_1988 = cigsale) %>%\n  \n  \n  # Generate the fitted weights for the synthetic control\n  generate_weights(optimization_window = 1970:1988, # time to use in the optimization task\n                   margin_ipop = .02,sigf_ipop = 7,bound_ipop = 6 # optimizer options\n  ) %>%\n  \n  # Generate the synthetic control\n  generate_control()\n```\n:::\n\n\nOnce the synthetic control is generated, one can easily assess the fit by comparing the trends of the synthetic and observed time series. The idea is that the trends in the pre-intervention period should map closely onto one another.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_trends()\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nTo capture the causal quantity (i.e. the difference between the observed and counterfactual), one can plot the differences using plot_differences()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_differences()\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nIn addition, one can easily examine the weighting of the units and variables in the fit. This allows one to see which cases were used, in part, to generate the synthetic control.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_weights()\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nAnother useful way of evaluating the synthetic control is to look at how comparable the synthetic control is to the observed covariates of the treated unit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% grab_balance_table()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 4\n  variable     California synthetic_California donor_sample\n  <chr>             <dbl>                <dbl>        <dbl>\n1 ln_income        10.1                  9.85         9.83 \n2 ret_price        89.4                 89.4         87.3  \n3 youth             0.174                0.174        0.173\n4 beer_sales       24.3                 24.2         23.7  \n5 cigsale_1975    127.                 127.         137.   \n6 cigsale_1980    120.                 120.         138.   \n7 cigsale_1988     90.1                 91.4        114.   \n```\n:::\n:::\n\n\n## Inference\n\nFor inference, the method relies on repeating the method for every donor in the donor pool exactly as was done for the treated unit — i.e. generating placebo synthetic controls). By setting generate_placebos = TRUE when initializing the synth pipeline with synthetic_control(), placebo cases are automatically generated when constructing the synthetic control of interest. This makes it easy to explore how unique difference between the observed and synthetic unit is when compared to the placebos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_placebos()\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nNote that the plot_placebos() function automatically prunes any placebos that poorly fit the data in the pre-intervention period. The reason for doing so is purely visual: those units tend to throw off the scale when plotting the placebos. To prune, the function looks at the pre-intervention period mean squared prediction error (MSPE) (i.e. a metric that reflects how well the synthetic control maps to the observed outcome time series in pre-intervention period). If a placebo control has a MSPE that is two times beyond the target case (e.g. “California”), then it’s dropped. To turn off this behavior, set prune = FALSE.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_placebos(prune = FALSE)\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nFinally, Adabie et al. 2010 outline a way of constructing Fisher’s Exact P-values by dividing the post-intervention MSPE by the pre-intervention MSPE and then ranking all the cases by this ratio in descending order. A p-value is then constructed by taking the rank/total.1 The idea is that if the synthetic control fits the observed time series well (low MSPE in the pre-period) and diverges in the post-period (high MSPE in the post-period) then there is a meaningful effect due to the intervention. If the intervention had no effect, then the post-period and pre-period should continue to map onto one another fairly well, yielding a ratio close to 1. If the placebo units fit the data similarly, then we can’t reject the hull hypothesis that there is no effect brought about by the intervention.\n\nThis ratio can be easily plotted using plot_mspe_ratio(), offering insight into the rarity of the case where the intervention actually occurred.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% plot_mspe_ratio()\n```\n\n::: {.cell-output-display}\n![](synthetic-control_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nFor more specific information, there is a significance table that can be extracted with one of the many grab_ prefix functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsmoking_out %>% grab_significance()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 39 × 8\n   unit_name      type  pre_mspe post_mspe mspe_ratio  rank fishers_exact_pvalue\n   <chr>          <chr>    <dbl>     <dbl>      <dbl> <int>                <dbl>\n 1 California     Trea…     3.17     392.      124.       1               0.0256\n 2 Georgia        Donor     3.79     179.       47.2      2               0.0513\n 3 Indiana        Donor    25.2      770.       30.6      3               0.0769\n 4 West Virginia  Donor     9.52     284.       29.8      4               0.103 \n 5 Wisconsin      Donor    11.1      268.       24.1      5               0.128 \n 6 Missouri       Donor     3.03      67.8      22.4      6               0.154 \n 7 Texas          Donor    14.4      277.       19.3      7               0.179 \n 8 South Carolina Donor    12.6      234.       18.6      8               0.205 \n 9 Virginia       Donor     9.81      96.4       9.83     9               0.231 \n10 Nebraska       Donor     6.30      52.9       8.40    10               0.256 \n# ℹ 29 more rows\n# ℹ 1 more variable: z_score <dbl>\n```\n:::\n:::\n",
    "supporting": [
      "synthetic-control_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}